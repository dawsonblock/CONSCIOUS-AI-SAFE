# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: brain.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'brain.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x62rain.proto\x12\x05\x62rain\"\x0b\n\tHealthReq\"@\n\nHealthResp\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x11\n\tuptime_ms\x18\x03 \x01(\x03\"9\n\x07StepReq\x12\r\n\x05input\x18\x01 \x03(\x01\x12\x0e\n\x06reward\x18\x02 \x01(\x01\x12\x0f\n\x07\x63ontext\x18\x03 \x01(\t\"p\n\x08StepResp\x12\x0f\n\x07\x65ntropy\x18\x01 \x01(\x01\x12\x17\n\x0ftotal_collapses\x18\x02 \x01(\x03\x12\x10\n\x08qw_state\x18\x03 \x03(\x01\x12(\n\x0cmemory_stats\x18\x04 \x01(\x0b\x32\x12.brain.MemoryStats\"\n\n\x08StatsReq\"\x8a\x02\n\tStatsResp\x12\x0f\n\x07\x65ntropy\x18\x01 \x01(\x01\x12\x17\n\x0ftotal_collapses\x18\x02 \x01(\x03\x12\x11\n\tdimension\x18\x03 \x01(\x05\x12\x0e\n\x06purity\x18\x04 \x01(\x01\x12(\n\x0cmemory_stats\x18\x05 \x01(\x0b\x32\x12.brain.MemoryStats\x12&\n\x0bgraph_stats\x18\x06 \x01(\x0b\x32\x11.brain.GraphStats\x12.\n\x07metrics\x18\x07 \x03(\x0b\x32\x1d.brain.StatsResp.MetricsEntry\x1a.\n\x0cMetricsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\x18\n\x08\x45mbedReq\x12\x0c\n\x04text\x18\x01 \x01(\t\"\x1e\n\tEmbedResp\x12\x11\n\tembedding\x18\x01 \x03(\x02\"=\n\tUpsertReq\x12\x0b\n\x03ids\x18\x01 \x03(\x03\x12#\n\x07vectors\x18\x02 \x03(\x0b\x32\x12.brain.EmbedVector\"\x1b\n\x0b\x45mbedVector\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x02\"\x1b\n\nUpsertResp\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\"d\n\tRecallReq\x12\r\n\x05query\x18\x01 \x03(\x02\x12\x0c\n\x04topk\x18\x02 \x01(\x05\x12\'\n\x07\x66ilters\x18\x03 \x03(\x0b\x32\x16.brain.FilterPredicate\x12\x11\n\tuse_graph\x18\x04 \x01(\x08\"Q\n\x0f\x46ilterPredicate\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\n\n\x02op\x18\x02 \x01(\t\x12\x12\n\nvalue_text\x18\x03 \x01(\t\x12\x11\n\tvalue_num\x18\x04 \x01(\x01\",\n\nRecallResp\x12\x0b\n\x03ids\x18\x01 \x03(\x03\x12\x11\n\tdistances\x18\x02 \x03(\x02\"]\n\x0bMemoryStats\x12\x13\n\x0btotal_items\x18\x01 \x01(\x03\x12\x11\n\thot_items\x18\x02 \x01(\x03\x12\x12\n\nwarm_items\x18\x03 \x01(\x03\x12\x12\n\ncold_items\x18\x04 \x01(\x03\">\n\nGraphStats\x12\r\n\x05nodes\x18\x01 \x01(\x03\x12\r\n\x05\x65\x64ges\x18\x02 \x01(\x03\x12\x12\n\navg_degree\x18\x03 \x01(\x01\x32\x9d\x02\n\x05\x42rain\x12\'\n\x04Step\x12\x0e.brain.StepReq\x1a\x0f.brain.StepResp\x12-\n\x08GetStats\x12\x0f.brain.StatsReq\x1a\x10.brain.StatsResp\x12*\n\x05\x45mbed\x12\x0f.brain.EmbedReq\x1a\x10.brain.EmbedResp\x12-\n\x06Upsert\x12\x10.brain.UpsertReq\x1a\x11.brain.UpsertResp\x12-\n\x06Recall\x12\x10.brain.RecallReq\x1a\x11.brain.RecallResp\x12\x32\n\x0bHealthCheck\x12\x10.brain.HealthReq\x1a\x11.brain.HealthRespb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'brain_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_STATSRESP_METRICSENTRY']._loaded_options = None
  _globals['_STATSRESP_METRICSENTRY']._serialized_options = b'8\001'
  _globals['_HEALTHREQ']._serialized_start=22
  _globals['_HEALTHREQ']._serialized_end=33
  _globals['_HEALTHRESP']._serialized_start=35
  _globals['_HEALTHRESP']._serialized_end=99
  _globals['_STEPREQ']._serialized_start=101
  _globals['_STEPREQ']._serialized_end=158
  _globals['_STEPRESP']._serialized_start=160
  _globals['_STEPRESP']._serialized_end=272
  _globals['_STATSREQ']._serialized_start=274
  _globals['_STATSREQ']._serialized_end=284
  _globals['_STATSRESP']._serialized_start=287
  _globals['_STATSRESP']._serialized_end=553
  _globals['_STATSRESP_METRICSENTRY']._serialized_start=507
  _globals['_STATSRESP_METRICSENTRY']._serialized_end=553
  _globals['_EMBEDREQ']._serialized_start=555
  _globals['_EMBEDREQ']._serialized_end=579
  _globals['_EMBEDRESP']._serialized_start=581
  _globals['_EMBEDRESP']._serialized_end=611
  _globals['_UPSERTREQ']._serialized_start=613
  _globals['_UPSERTREQ']._serialized_end=674
  _globals['_EMBEDVECTOR']._serialized_start=676
  _globals['_EMBEDVECTOR']._serialized_end=703
  _globals['_UPSERTRESP']._serialized_start=705
  _globals['_UPSERTRESP']._serialized_end=732
  _globals['_RECALLREQ']._serialized_start=734
  _globals['_RECALLREQ']._serialized_end=834
  _globals['_FILTERPREDICATE']._serialized_start=836
  _globals['_FILTERPREDICATE']._serialized_end=917
  _globals['_RECALLRESP']._serialized_start=919
  _globals['_RECALLRESP']._serialized_end=963
  _globals['_MEMORYSTATS']._serialized_start=965
  _globals['_MEMORYSTATS']._serialized_end=1058
  _globals['_GRAPHSTATS']._serialized_start=1060
  _globals['_GRAPHSTATS']._serialized_end=1122
  _globals['_BRAIN']._serialized_start=1125
  _globals['_BRAIN']._serialized_end=1410
# @@protoc_insertion_point(module_scope)
