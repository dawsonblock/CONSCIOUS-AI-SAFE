version: '3.8'

services:
  # Brain gRPC Server
  brain-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: brain-grpc-server
    ports:
      - "50051:50051"
    volumes:
      - ./configs:/app/configs:ro
      - brain-data:/app/data
    environment:
      - QUANTUM_CONFIG=/app/configs/quantum.yaml
      - LOG_LEVEL=info
    restart: unless-stopped
    networks:
      - brain-network
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:50051"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Development environment
  brain-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: brain-dev
    volumes:
      - .:/workspace:cached
      - brain-build-cache:/workspace/build
    working_dir: /workspace
    command: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - brain-network
    profiles:
      - dev

  # Cockpit Safety Monitor
  cockpit-monitor:
    build:
      context: ./Cockpit-main
      dockerfile: Dockerfile
    container_name: cockpit-safety-monitor
    volumes:
      - ./Cockpit-main/config:/app/config:ro
      - cockpit-audit:/app/audit
    environment:
      - COCKPIT_EVOLVE=on
      - EXPLAIN_POLICY=strict
      - KILL_SWITCH_PATH=/app/kill_switch
    restart: unless-stopped
    networks:
      - brain-network
    profiles:
      - full

  # Document Ingestion Pipeline
  ingest-service:
    build:
      context: ./ingest_cpp
      dockerfile: Dockerfile
    container_name: ingest-pipeline
    ports:
      - "8080:8080"
    volumes:
      - ./ingest_cpp/config:/app/config:ro
      - ingest-documents:/app/documents
      - ingest-index:/app/index
    environment:
      - EMBED_SERVICE_URL=http://embed-service:8081
      - INDEX_PATH=/app/index
    restart: unless-stopped
    networks:
      - brain-network
    profiles:
      - full

  # Embedding Service (for RAG)
  embed-service:
    image: sentence-transformers/all-MiniLM-L6-v2
    container_name: embedding-service
    ports:
      - "8081:8081"
    restart: unless-stopped
    networks:
      - brain-network
    profiles:
      - full

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: brain-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - brain-network
    profiles:
      - monitoring

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: brain-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - brain-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  brain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  brain-data:
    driver: local
  brain-build-cache:
    driver: local
  cockpit-audit:
    driver: local
  ingest-documents:
    driver: local
  ingest-index:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
